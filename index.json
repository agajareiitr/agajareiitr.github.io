[{"content":"This Guide will Help you to Deploy your Django Project on AWS (amazon web services) Prerequisites :  Working Django Project Hosted on Github amazon AWS Account  Before we begin lets see how we will deploy it  Django Project will be Deployed on AWS EC2 Instance. No S3 or Database (will use Django Default Database) Buy a Domain Name (Hostinger is used). use Route 53 to connect our Domain Name.   This Tutorial is Divided into 6 Parts : 1. Launching a EC2 instance   Search EC2 in Search option\n  Go to Instances and Click Launch Instance\n  Select Ubuntu 20.04-amd64-server\n  Select the t2.micro Free tier eligible\n  Go to Congfigure Security Group and click add followings rules :\n   Type Protocol Port Range Source     HTTP TCP 80 0.0.0.0/0   HTTP TCP 80 ::/0   SSH TCP 22 0.0.0.0/0   HTTPS TCP 443 0.0.0.0/0      Click Launch Instance\n  Now After Instance Launched click on it and then Click Connect\n  You will see EC2 Instance Connect and then click on Connect\n  A new Tab will Open that\u0026rsquo;s your Server (We can also ssh directly but in this tutorial we will use Browser only)\n   Now that Our Instance is Launched we have do update it and make it ready for Django  2. Updating Ubuntu, Installing Python,Virtualenv, nginx, supervisor   Run The Following Commands :\n sudo apt-get update sudo apt-get upgrade    Check if Python3 is installed :\n python3 --version    install python environment :\n sudo apt-get install python3-venv python3 -m venv Projectname-env    Activate the Python Environment by source Projectname-env/bin/activate\n  Install nginx sudo apt-get install -y nginx\n  Install supervisor sudo apt-get install supervisor\n   Everything is Ready Now, we will clone our Repository from GitHub  3. Cloning Repository and Setting Django Project (Projectname-env should be activated):   run git clone https://github.com/agajareiitr/Todo-list-app.git\n Note : here \u0026quot;Todo-list-app\u0026quot; is my repository change it with your Repository    run : pip3 install gunicorn\n  Install the Project requirements : pip3 install -r requirements.txt\n  Go to cd /etc/supervisor/conf.d/ location\n  Run Below Commands :\n  sudo touch gunicorn.conf\n  sudo nano gunicorn.conf\n  Paste the Below code there and Edit your Project Name :\n [program:gunicorn] directory=/home/ubuntu/Todo-list-app command=/home/ubuntu/env/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/Todo-list-app/app.sock svportal.wsgi:application autostart=true autorestart=true stderr_logfile=/var/log/gunicorn/gunicorn.err.log stdout_logfile=/var/log/gunicorn/gunicorn.out.log [group:guni] programs:gunicorn      create gunicorn file :\n sudo mkdir /var/log/gunicorn sudo supervisorctl reread  output: guni:avaliable   sudo supervisorctl update  output: guni:added process group   sudo supervisorctl status  output: guni:gunicorn Running pid \u0026lt;id\u0026gt;, uptime 0:00:01      Go to cd /etc/nginx/sites-available/ and run below commands :\n  sudo touch django.conf\n  sudo nano django.conf\n  Paste the Below Code (change the server name with IPv4 public address):\n server{ listen 80; server_name 65.0.130.1; location / { include proxy_params; proxy_pass http://unix:/home/ubuntu/Todo-list-app/app.sock; } }    Now let\u0026rsquo;s test the nginx service\n sudo nginx -t sudo ln django.conf /etc/nginx/sites-enabled/ sudo service nginx restart       Our App don\u0026rsquo;t have Static Files but if your App does then follow the Below Steps  4. Connecting the Static Files :   Go to Path - cd /etc/nginx/sites-enabled/\n  Open Django.conf file by sudo nano django.conf\n  Paste the Below Code and Edit according to you:\n server{ listen 80; server_name 65.0.130.1; location / { include proxy_params; proxy_pass http://unix:/home/ubuntu/Todo-list-app/app.sock; } location /static { autoindex on; alias /home/ubuntu/Todo-list-app/static; } }    Run nginx service again\n sudo nginx -t sudo service nginx restart     Now Your Site is running on your IP check it, below steps are for connecting Domain  5. Connecting Domain Name with Route 53 :   Go to Any Domain Name PRovider and Purchase any Domain you want\n  Go to Path - cd /etc/nginx/sites-enabled/\n  Open Django.conf file by sudo nano django.conf\n  Edit the server_name:\nserver{ listen 80; server_name todolist.com www.todolist.com; }    Run nginx service again\n sudo nginx -t sudo service nginx restart    Remember the ipv4 public address copy it from EC2 instance\n  in AWS search Route53 and click Create a Hosted Zone and follow the below commands\n  Click Create Hosted Zone and add Domain Name todolist.com (without www) and create it\n  Click Create Record set :\n Record name : www Record type : A value : Your IPv4 public address leave else as it is and click create    Click Create Record set :\n Record name : leave blank Record type : A Value : theres a Alias Button click it and choose endpoint Alias to another record in this hosted zone now select the www.todolist.com leave else as it is and click create    Visit your Domain Provider and go to thier DNS servers settings\n  In route53 theres a record name with type NS(name servers) paste them in DNS of domain provider one by one, it looks like below code :\n ns-557.awsdns-05.net ns-165.awsdns-20.com ns-1831.awsdns-36.co.uk ns-1154.awsdns-16.org       Now your website will redirect the ipv4 to your domain name, but you can see its says now secure, so lets add a SSL Certificate  6. Adding SSL Certificate   Run the Following Commands :\n sudo apt-get update sudo apt-get install software-properties-common sudo add-apt-repository universe sudo add-apt-repository ppa:certbot/certbot sudo apt-get update sudo apt-get install certbot python3-certbot-nginx Give the Permission required and run sudo certbot --nginx    following will be asked\n Email: enter your email so that you will get updates about your certificate Agree to terms of services: enter ‚Äòa‚Äô for accepting Share your email: You can ignore it by entering ‚Äòn‚Äô. Choose your domains. If you want all the domains then hit enter Choose the redirect option: Enter 2 for enabling redirect.    Now Restart Everything\n sudo supervisorctl reload sudo service nginx restart     NOTE: if your webite is not showing give some time DNS transfer requires from 10 Minutes to 48 Hours be patient.  This Concludes our Tutorial Thanks ","permalink":"https://agajareiitr.github.io/posts/aws-deploy-django/","summary":"This Guide will Help you to Deploy your Django Project on AWS (amazon web services) Prerequisites :  Working Django Project Hosted on Github amazon AWS Account  Before we begin lets see how we will deploy it  Django Project will be Deployed on AWS EC2 Instance. No S3 or Database (will use Django Default Database) Buy a Domain Name (Hostinger is used). use Route 53 to connect our Domain Name.","title":"Aws Deploy Django"},{"content":"Konichiwa, Welcome   About ME üí¨ : - I\u0026rsquo;m 21 years old Python Developer and undergraduate at IIT Roorkee from India. - Super Powers :  ‚ú® Python, R, C++, JavaScript ‚ú® Web Scrapping, Django, Flask  - Hobbies :  ‚ú® Watching Anime ‚ú® Freelancing ‚ú® Travelling/Photography  Languages \u0026amp; Tools üë®‚Äçüíª üõ†:             Contact Me :  Reach out to me for anything, be it for a freelancing your Project, want to discuss different Anime or just some chitchat. Click any link form Below, lets have a chat üòâ.\n     Personal Website   --- ","permalink":"https://agajareiitr.github.io/aboutme/","summary":"Konichiwa, Welcome   About ME üí¨ : - I\u0026rsquo;m 21 years old Python Developer and undergraduate at IIT Roorkee from India. - Super Powers :  ‚ú® Python, R, C++, JavaScript ‚ú® Web Scrapping, Django, Flask  - Hobbies :  ‚ú® Watching Anime ‚ú® Freelancing ‚ú® Travelling/Photography  Languages \u0026amp; Tools üë®‚Äçüíª üõ†:             Contact Me :  Reach out to me for anything, be it for a freelancing your Project, want to discuss different Anime or just some chitchat.","title":"About Me üë®‚Äçüíª"},{"content":" COVID-19india WhatsApp Application   COVID-19india-WhatsApp is a Application Which Provides Latest Information of Corona Virus Cases on Your WhatsApp Number\n  WhatsApp Bot Link ( sorry for inconvience but the bot is currently inactive )\n   Setup STEP 1 : Send join second-previous to WhatsApp Number - +14155238886\nSTEP 2 : A simple Hey Message will Guide you further and you will get a Welcome message like below screenshot:\nSTEP 3 : You can choose Any option like :\n  1 for Latest Corona Virus Cases of All India  2 for To get state code and then Enter the State Code to get State Cases  3 for 5 most Affected States in India  4 for Latest News on Corona virus cases  5 for How I Made this bot  6 for Share this Bot with a Link or Enter the Name of State like Maharashtra to get most affected districts in Maharastra   Source of COVID-19 Cases Data   COVID-19india WhatsApp Application uses the OPEN SOURCED API Provided by https://github.com/covid19india to Get the latest data on Corona Virus Cases Data.\n  You can Always Cross check Data on https://www.covid19india.org/\n  This Website is created by a group of dedicated volunteers who curate and verify the data coming from several sources on Corona Cases and Provide the Lastest Updates and They own all the Data Which this Application provide on Your whatsApp\n   How This Works COVID-19india WhatsApp Application uses following things to operate:\n  Uses Python Twilio ngrok Flask\n  Step 1 : Using Python it collected The data from the from API of covid19india using requests Module\n  Step 2 : Using Flask and Twilio Python Libraries I hosted it on localhost and arranged \u0026lsquo;POST\u0026rsquo;,\u0026lsquo;GET\u0026rsquo; Methods\n  Step 3 : using ngrok to convert my localhost into 'http' server\n  Step 4 : Added 'http' server into Twilio for sending WhatsApp Messages\n   ","permalink":"https://agajareiitr.github.io/projects/covid19-india-whatsapp-application/","summary":"COVID-19india WhatsApp Application   COVID-19india-WhatsApp is a Application Which Provides Latest Information of Corona Virus Cases on Your WhatsApp Number\n  WhatsApp Bot Link ( sorry for inconvience but the bot is currently inactive )\n   Setup STEP 1 : Send join second-previous to WhatsApp Number - +14155238886\nSTEP 2 : A simple Hey Message will Guide you further and you will get a Welcome message like below screenshot:","title":"Covid19 India Whatsapp Application"}]